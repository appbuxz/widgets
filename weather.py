from PyQt6.QtWidgets import (QApplication, QLabel, QVBoxLayout, QWidget, 
                            QHBoxLayout, QPushButton)
from PyQt6.QtCore import Qt, QTimer, QPropertyAnimation, QEasingCurve, QPoint
from PyQt6.QtGui import QFont, QMouseEvent, QIcon, QColor
from PyQt6.QtGui import QPainter, QBrush, QPen, QLinearGradient
import requests
import sys
from datetime import datetime

class WeatherWidget(QWidget):
    def __init__(self):
        super().__init__()
        self.setup_ui()
        self.setup_animations()
        self.setup_weather_data()
        
    def setup_ui(self):
        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        self.setWindowTitle("–ü–æ–≥–æ–¥–Ω—ã–π –í–∏–¥–∂–µ—Ç")
        self.setFixedSize(300, 180)
        self.setWindowFlags(Qt.WindowType.FramelessWindowHint | 
                          Qt.WindowType.WindowStaysOnTopHint)
        self.setAttribute(Qt.WidgetAttribute.WA_TranslucentBackground)
        
        # –°—Ç–∏–ª—å –≤–∏–¥–∂–µ—Ç–∞
        self.setStyleSheet("""
            QWidget {
                background-color: rgba(40, 40, 50, 200);
                border-radius: 15px;
                color: white;
                font-family: 'Segoe UI';
            }
            QLabel {
                padding: 2px;
            }
            QPushButton {
                background-color: transparent;
                border: none;
                color: white;
            }
        """)
        
        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.city_label = QLabel("–ó–∞–≥—Ä—É–∑–∫–∞...")
        self.city_label.setFont(QFont('Arial', 12, QFont.Weight.Bold))
        
        self.temp_label = QLabel()
        self.temp_label.setFont(QFont('Arial', 24, QFont.Weight.Bold))
        
        self.condition_label = QLabel()
        self.condition_label.setFont(QFont('Arial', 10))
        
        self.details_label = QLabel()
        self.details_label.setFont(QFont('Arial', 9))
        
        self.time_label = QLabel()
        self.time_label.setFont(QFont('Arial', 8))
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        self.close_btn = QPushButton("‚úï")
        self.close_btn.setFixedSize(20, 20)
        self.close_btn.clicked.connect(self.close)
        self.close_btn.setStyleSheet("""
            QPushButton:hover {
                color: #ff5555;
            }
        """)
        
        # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.refresh_btn = QPushButton("‚ü≥")
        self.refresh_btn.setFixedSize(20, 20)
        self.refresh_btn.clicked.connect(self.update_weather)
        
        # –†–∞–∑–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        header = QHBoxLayout()
        header.addWidget(self.city_label)
        header.addStretch()
        header.addWidget(self.refresh_btn)
        header.addWidget(self.close_btn)
        
        main_layout = QVBoxLayout()
        main_layout.addLayout(header)
        main_layout.addWidget(self.temp_label, alignment=Qt.AlignmentFlag.AlignCenter)
        main_layout.addWidget(self.condition_label, alignment=Qt.AlignmentFlag.AlignCenter)
        main_layout.addWidget(self.details_label, alignment=Qt.AlignmentFlag.AlignCenter)
        main_layout.addWidget(self.time_label, alignment=Qt.AlignmentFlag.AlignRight)
        main_layout.setSpacing(5)
        
        self.setLayout(main_layout)
        
        # –î–ª—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
        self.drag_pos = QPoint()
        
    def setup_animations(self):
        # –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        self.opacity_animation = QPropertyAnimation(self, b"windowOpacity")
        self.opacity_animation.setDuration(500)
        self.opacity_animation.setStartValue(0)
        self.opacity_animation.setEndValue(1)
        self.opacity_animation.setEasingCurve(QEasingCurve.Type.OutQuad)
        self.opacity_animation.start()
        
        # –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
        self.update_animation = QPropertyAnimation(self, b"geometry")
        self.update_animation.setDuration(300)
        
    def setup_weather_data(self):
        self.timer = QTimer()
        self.timer.timeout.connect(self.update_weather)
        self.timer.start(60000)  # –û–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
        self.update_weather()
        
    def mousePressEvent(self, event: QMouseEvent):
        if event.button() == Qt.MouseButton.LeftButton:
            self.drag_pos = event.globalPosition().toPoint() - self.pos()
            
    def mouseMoveEvent(self, event: QMouseEvent):
        if event.buttons() == Qt.MouseButton.LeftButton:
            self.move(event.globalPosition().toPoint() - self.drag_pos)
            
    def paintEvent(self, event):
        painter = QPainter(self)
        painter.setRenderHint(QPainter.RenderHint.Antialiasing)
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
        gradient = QLinearGradient(0, 0, 0, self.height())
        gradient.setColorAt(0, QColor(60, 60, 80, 220))
        gradient.setColorAt(1, QColor(40, 40, 50, 220))
        
        painter.setBrush(QBrush(gradient))
        painter.setPen(Qt.PenStyle.NoPen)
        painter.drawRoundedRect(self.rect(), 15, 15)
        
        # –¢–µ–Ω—å
        painter.setPen(QPen(QColor(0, 0, 0, 50), 5))
        painter.drawRoundedRect(self.rect(), 15, 15)
        
    def update_weather(self):
        # –ê–Ω–∏–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        self.update_animation.setStartValue(self.geometry())
        self.update_animation.setEndValue(self.geometry().adjusted(0, -5, 0, -5))
        self.update_animation.start()
        
        API_KEY = "78e34157f30c45d095291555250805"
        CITY = "–ê–∫—Ç–æ–±–µ"
        url = f"http://api.weatherapi.com/v1/current.json?key={API_KEY}&q={CITY}&lang=ru"
        
        try:
            data = requests.get(url).json()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            self.city_label.setText(f"{data['location']['name']}")
            self.temp_label.setText(f"{data['current']['temp_c']}¬∞C")
            self.condition_label.setText(data['current']['condition']['text'])
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            details = (f"üí® –í–µ—Ç–µ—Ä: {data['current']['wind_kph']} –∫–º/—á | "
                      f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['current']['humidity']}% ")
            self.details_label.setText(details)
            
            # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            now = datetime.now().strftime("%H:%M:%S")
            self.time_label.setText(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {now}")
            
            # –ò–∑–º–µ–Ω—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
            temp = data['current']['temp_c']
            if temp > 25:
                color = "#ff6b6b"  # –ñ–∞—Ä–∫–æ
            elif temp > 15:
                color = "#feca57"  # –¢–µ–ø–ª–æ
            else:
                color = "#54a0ff"  # –•–æ–ª–æ–¥–Ω–æ
                
            self.temp_label.setStyleSheet(f"color: {color};")
            
        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)
            self.condition_label.setText("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
            
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∏–¥–∂–µ—Ç –Ω–∞ –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        self.update_animation.setStartValue(self.geometry())
        self.update_animation.setEndValue(self.geometry().adjusted(0, 5, 0, 5))
        self.update_animation.start()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    widget = WeatherWidget()
    widget.show()
    sys.exit(app.exec())